<?xml version="1.0" encoding="UTF-8"  ?>
<!-- Created with iReport - A designer for JasperReports -->
<!DOCTYPE jasperReport PUBLIC "//JasperReports//DTD Report Design//EN" "http://jasperreports.sourceforge.net/dtds/jasperreport.dtd">
<jasperReport
		 name="BorangH_Perintah"
		 columnCount="1"
		 printOrder="Vertical"
		 orientation="Portrait"
		 pageWidth="595"
		 pageHeight="842"
		 columnWidth="535"
		 columnSpacing="0"
		 leftMargin="30"
		 rightMargin="30"
		 topMargin="20"
		 bottomMargin="20"
		 whenNoDataType="AllSectionsNoDetail"
		 isTitleNewPage="false"
		 isSummaryNewPage="false">
	<property name="ireport.scriptlethandling" value="0" />
	<property name="ireport.encoding" value="UTF-8" />
	<import value="java.util.*" />
	<import value="net.sf.jasperreports.engine.*" />
	<import value="net.sf.jasperreports.engine.data.*" />

	<parameter name="idfail" isForPrompting="true" class="java.lang.String"/>
	<parameter name="obMinor" isForPrompting="true" class="java.lang.String"/>
	<parameter name="obMinor2" isForPrompting="true" class="java.lang.String"/>
	<queryString><![CDATA[SELECT DISTINCT
      T.ID_PA1,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA'  
      END AS ALAMAT_PA, 
      E.ID_FAIL,C.NO_KP_BARU,
      -- CASE
      --  WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
       -- WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
       --END AS NO_FAIL,
       REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
       CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
      NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHTAOBMST S,
       TBLPPKPERINTAHHTAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA1
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
         
            
             S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1
          )EEE
          WHERE U.ID_OB = EEE.ID_PA1
          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA1,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA1
          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB_W_STATUS,
          
          (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA1
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
         
            
            S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1)
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA1
--          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB_WO_PA,
          (SELECT 
         -- EEE.ID_PA1,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1,T.STATUS_OB)
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA1
--          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB_W_STATUS_WO_PA
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA1 = U.ID_OB
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHTAOBMST = T.ID_PERINTAHHTAOBMST
   AND T.ID_PA1 IS NOT NULL
   AND NAMA_OB.ID_PA1 = T.ID_PA1
   AND NAMA_OB_W_STATUS.ID_PA1 = T.ID_PA1
   AND V.ID_NEGERI = U.ID_NEGERI
   AND E.ID_FAIL =$P!{idfail}
   
   UNION
   
   SELECT DISTINCT
      T.ID_PA2,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA' 
      END AS ALAMAT_PA, 
       E.ID_FAIL,C.NO_KP_BARU,
     --  CASE
      --  WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
       -- WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
      -- END AS NO_FAIL,
      REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
      CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
      NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHTAOBMST S,
       TBLPPKPERINTAHHTAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA2
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
         
            
           S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2
          )EEE
          WHERE U.ID_OB = EEE.ID_PA2
          GROUP BY EEE.ID_PA2
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA2,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
           S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA2
          GROUP BY EEE.ID_PA2
          
          ) NAMA_OB_W_STATUS,
          
          (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA2
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
         
            
            S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA2
--          GROUP BY EEE.ID_PA2
--          
          ) NAMA_OB_WO_PA,
          (SELECT 
         -- EEE.ID_PA2,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2,T.STATUS_OB)
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA2
--          GROUP BY EEE.ID_PA2
          
          ) NAMA_OB_W_STATUS_WO_PA
      
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA2 = U.ID_OB
   AND U.ID_NEGERI = V.ID_NEGERI
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHTAOBMST = T.ID_PERINTAHHTAOBMST
   AND T.ID_PA2 IS NOT NULL
   AND NAMA_OB.ID_PA2 = T.ID_PA2
   AND NAMA_OB_W_STATUS.ID_PA2 = T.ID_PA2
   AND E.ID_FAIL =$P!{idfail}
   
   UNION
   
   SELECT DISTINCT
       T.ID_PA3,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA' 
      END AS ALAMAT_PA, 
      E.ID_FAIL,C.NO_KP_BARU,
     --  CASE
     --   WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
      --  WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
     --  END AS NO_FAIL,
     REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
       CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
       NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHTAOBMST S,
       TBLPPKPERINTAHHTAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA3
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
         
            
             S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
         -- AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3
          )EEE
          WHERE U.ID_OB = EEE.ID_PA3
          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA3,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
            S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA3
          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB_W_STATUS,
          
          (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA3
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
         
            
             S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
         -- AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA3
--          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB_WO_PA,
          (SELECT 
--          EEE.ID_PA3,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3,T.STATUS_OB
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA3
--          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB_W_STATUS_WO_PA
      
      
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA3 = U.ID_OB
   AND U.ID_NEGERI = V.ID_NEGERI
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHTAOBMST = T.ID_PERINTAHHTAOBMST
   AND T.ID_PA3 IS NOT NULL
   AND NAMA_OB.ID_PA3 = T.ID_PA3
   AND NAMA_OB_W_STATUS.ID_PA3 = T.ID_PA3
   AND E.ID_FAIL =$P!{idfail}
   
   UNION
   
   SELECT DISTINCT
       T.ID_PA4,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA'  
      END AS ALAMAT_PA, 
      E.ID_FAIL,C.NO_KP_BARU,
      -- CASE
      --  WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
      --  WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
      -- END AS NO_FAIL,
      REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
      CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
     NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHTAOBMST S,
       TBLPPKPERINTAHHTAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA4
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
            
             S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
         GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4
          )EEE
          WHERE U.ID_OB = EEE.ID_PA4
          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA4,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA4
          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB_W_STATUS,
          
           (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA4
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
            
            S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA4
--          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB_WO_PA,
          (SELECT 
--          EEE.ID_PA4,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHTAOBMST R, TBLPPKPERINTAHHTAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHTAOBMST = S.ID_PERINTAHHTAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
         GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4,T.STATUS_OB
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA4
--          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB_W_STATUS_WO_PA
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA4 = U.ID_OB
   AND U.ID_NEGERI = V.ID_NEGERI
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHTAOBMST = T.ID_PERINTAHHTAOBMST
   AND T.ID_PA4 IS NOT NULL
   AND NAMA_OB.ID_PA4 = T.ID_PA4
   AND NAMA_OB_W_STATUS.ID_PA4 = T.ID_PA4
   AND E.ID_FAIL =$P!{idfail}
   
   UNION
   
    SELECT DISTINCT
       T.ID_PA1,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA' 
      END AS ALAMAT_PA, 
       E.ID_FAIL,C.NO_KP_BARU,
      -- CASE
     --  WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
      --  WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
      -- END AS NO_FAIL,
      REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
       CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
       
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
      NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHAOBMST S,
       TBLPPKPERINTAHHAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA1
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
            S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1
          )EEE
          WHERE U.ID_OB = EEE.ID_PA1
          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA1,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
            S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
         GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA1
          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB_W_STATUS,
          
          (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA1
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
            
             S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA1
--          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB_WO_PA,
          (SELECT 
--          EEE.ID_PA1,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA1 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA1 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA1 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA1 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA1 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA1) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA1,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA1 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA1,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA1,T.STATUS_OB
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA1
--          GROUP BY EEE.ID_PA1
          
          ) NAMA_OB_W_STATUS_WO_PA
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA1 = U.ID_OB
   AND U.ID_NEGERI = V.ID_NEGERI
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHAOBMST = T.ID_PERINTAHHAOBMST
   AND T.ID_PA1 IS NOT NULL
   AND NAMA_OB.ID_PA1 = T.ID_PA1
   AND NAMA_OB_W_STATUS.ID_PA1 = T.ID_PA1
   AND E.ID_FAIL =$P!{idfail}
   
   UNION
   
   SELECT DISTINCT
       T.ID_PA2,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA'  
      END AS ALAMAT_PA, 
       E.ID_FAIL,C.NO_KP_BARU,
       --CASE
        --WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
        --WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
       --END AS NO_FAIL,
       REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
       CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
      
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
      NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHAOBMST S,
       TBLPPKPERINTAHHAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA2
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
            
             S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2
          )EEE
          WHERE U.ID_OB = EEE.ID_PA2
          GROUP BY EEE.ID_PA2
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA2,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA2
          GROUP BY EEE.ID_PA2
          
          ) NAMA_OB_W_STATUS,
          
          (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA2
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
              
            
            S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA2
--          GROUP BY EEE.ID_PA2
          
          ) NAMA_OB_WO_PA,
          (SELECT 
         -- EEE.ID_PA2,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA2 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA2 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA2 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA2 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA2 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA2) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
            S.ID_PA2,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA2 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA2,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA2,T.STATUS_OB
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA2
--          GROUP BY EEE.ID_PA2
          
          ) NAMA_OB_W_STATUS_WO_PA
      
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA2 = U.ID_OB
   AND U.ID_NEGERI = V.ID_NEGERI
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHAOBMST = T.ID_PERINTAHHAOBMST
   AND T.ID_PA2 IS NOT NULL
   AND NAMA_OB.ID_PA2 = T.ID_PA2
   AND NAMA_OB_W_STATUS.ID_PA2 = T.ID_PA2
   AND E.ID_FAIL =$P!{idfail}
   
   UNION
   
   SELECT DISTINCT
       T.ID_PA3,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA'
      END AS ALAMAT_PA, 
       E.ID_FAIL,C.NO_KP_BARU,
       --CASE
       -- WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
       -- WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
       --END AS NO_FAIL,
       REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
       CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
      
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
     NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHAOBMST S,
       TBLPPKPERINTAHHAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA3
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
             
            
             S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3
          )EEE
          WHERE U.ID_OB = EEE.ID_PA3
          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA3,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA3
          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB_W_STATUS,
          
          (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA3
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
             
            
            S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA3
--          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB_WO_PA,
          (SELECT 
          --EEE.ID_PA3,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA3 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA3 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA3 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA3 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA3 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA3) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA3,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA3 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA3,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA3,T.STATUS_OB
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA3
--          GROUP BY EEE.ID_PA3
          
          ) NAMA_OB_W_STATUS_WO_PA
      
      
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA3 = U.ID_OB
   AND U.ID_NEGERI = V.ID_NEGERI
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHAOBMST = T.ID_PERINTAHHAOBMST
   AND T.ID_PA3 IS NOT NULL
   AND NAMA_OB.ID_PA3 = T.ID_PA3
   AND NAMA_OB_W_STATUS.ID_PA3 = T.ID_PA3
   AND E.ID_FAIL =$P!{idfail}
   
   UNION
   
   SELECT DISTINCT
       T.ID_PA4,U.NAMA_OB AS NAMA_PA,
      CASE 
        WHEN LENGTH(DDD2.NO_KP42) IS NULL THEN ''
        WHEN LENGTH(DDD2.NO_KP42)<12 THEN  ''||RTRIM(DDD2.NO_KP42)||''
        WHEN LENGTH(RTRIM(DDD2.NO_KP42))=12 THEN SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4) 
       ELSE SUBSTR(DDD2.NO_KP42,1,6) || '-' || SUBSTR(DDD2.NO_KP42,7,2) || '-' || SUBSTR(DDD2.NO_KP42,9,4)  ||' ('||TRIM(SUBSTR(DDD2.NO_KP42,13,LENGTH(DDD2.NO_KP42)))||')'
       END  AS KP_PA,
       CASE
         WHEN U.ALAMAT_1 IS NULL THEN 'TIADA' 
         WHEN U.ALAMAT_2 IS NULL AND U.ALAMAT_3 IS NULL THEN  REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(U.POSKOD),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_2 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;') ||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' ||REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         WHEN U.ALAMAT_3 IS NOT NULL THEN REPLACE(REPLACE(UPPER(trim(U.ALAMAT_1)),','),'&','&#38;')||', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_2)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.ALAMAT_3)),','),'&','&#38;') || ', ' || REPLACE(REPLACE(UPPER(trim(U.POSKOD)),','),'&','&#38;') || ' ' || REPLACE(REPLACE(UPPER(trim(U.BANDAR)),','),'&','&#38;') ||', '|| REPLACE(REPLACE(UPPER(trim(V.NAMA_NEGERI)),','),'&','&#38;')
         ELSE 'TIADA'  
      END AS ALAMAT_PA, 
       E.ID_FAIL,C.NO_KP_BARU,
      -- CASE
       -- WHEN LENGTH(E.NO_FAIL)>=30 THEN ''||substr(E.NO_FAIL,1,24)||''
       --WHEN LENGTH(E.NO_FAIL)<=25 THEN ''||rtrim(E.NO_FAIL)||''
      -- END AS NO_FAIL,
      REPLACE(NO_FAIL,SUBSTR(NO_FAIL, INSTR(NO_FAIL, '/S17')),'') AS NO_FAIL ,
       TO_CHAR (A.TARIKH_MOHON, 'yyyy') AS TAHUN,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_MOHON,
       CASE
        WHEN UPPER(TRIM(G.NAMA_DAERAH)) <> 'TIADA MAKLUMAT' THEN REPLACE(UPPER(REPLACE(TRIM(G.NAMA_DAERAH),'&','&#38;')),',')
        ELSE ''
       END AS DAERAH_MOHON,        
       D.NAMA_SIMATI,D.NAMA_LAIN,NVL(TO_CHAR (D.TARIKH_MATI, 'dd/mm/yyyy'),'') AS TARIKH_MATI,D.NO_SIJIL_MATI AS NO_SIJIL_MATI,       
       CASE 
        WHEN LENGTH(AAA.NO_KP1) IS NULL THEN ''
        WHEN LENGTH(AAA.NO_KP1)<12 THEN  ''||RTRIM(AAA.NO_KP1)||''
        WHEN LENGTH(RTRIM(AAA.NO_KP1))=12 THEN SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4) 
       ELSE SUBSTR(AAA.NO_KP1,1,6) || '-' || SUBSTR(AAA.NO_KP1,7,2) || '-' || SUBSTR(AAA.NO_KP1,9,4)  ||' ('||TRIM(SUBSTR(AAA.NO_KP1,13,LENGTH(AAA.NO_KP1)))||')'
       END  AS KP_SIMATI, 
       CASE 
        WHEN D.ID_BUKTIMATI = 1 THEN ', No. Sijil Mati: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 2 THEN ', Surat Sumpah Kematian: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 3 THEN ', Anggapan Kematian dari Mahkamah Tinggi: '|| D.NO_SIJIL_MATI
        WHEN D.ID_BUKTIMATI = 4 THEN ', No. Permit Kubur: '|| D.NO_SIJIL_MATI
    ELSE ''
       END AS BUKTI_MATI, 
       CASE 
        WHEN LENGTH(AAA2.NO_KP12) IS NULL THEN ''
        WHEN LENGTH(AAA2.NO_KP12)<12 THEN  '('||RTRIM(AAA2.NO_KP12)||')'
        WHEN LENGTH(RTRIM(AAA2.NO_KP12))=12 THEN '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)||')'
       ELSE '('||SUBSTR(AAA2.NO_KP12,1,6) || '-' || SUBSTR(AAA2.NO_KP12,7,2) || '-' || SUBSTR(AAA2.NO_KP12,9,4)  ||' / '||TRIM(SUBSTR(AAA2.NO_KP12,13,LENGTH(AAA2.NO_KP12)))||')'
       END  AS KP_SIMATI_2,  
       C.NAMA_PEMOHON AS NAMA_PEMOHON,
       CASE 
         WHEN LENGTH(BBB.NO_KP2) IS NULL THEN ''
         WHEN LENGTH(BBB.NO_KP2)<12 THEN  ''||RTRIM(BBB.NO_KP2)||''
         WHEN LENGTH(RTRIM(BBB.NO_KP2))=12 THEN SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4) 
       ELSE SUBSTR(BBB.NO_KP2,1,6) || '-' || SUBSTR(BBB.NO_KP2,7,2) || '-' || SUBSTR(BBB.NO_KP2,9,4)  ||' ('||SUBSTR(BBB.NO_KP2,13,LENGTH(BBB.NO_KP2))||')'
       END  AS KP_PEMOHON,
       CASE 
         WHEN LENGTH(BBB2.NO_KP22) IS NULL THEN ''
         WHEN LENGTH(BBB2.NO_KP22)<12 THEN  '('||RTRIM(BBB2.NO_KP22)||')'
         WHEN LENGTH(RTRIM(BBB2.NO_KP22))=12 THEN '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)||')' 
       ELSE '('||SUBSTR(BBB2.NO_KP22,1,6) || '-' || SUBSTR(BBB2.NO_KP22,7,2) || '-' || SUBSTR(BBB2.NO_KP22,9,4)  ||' / '||SUBSTR(BBB2.NO_KP22,13,LENGTH(BBB2.NO_KP22))||')'
       END  AS KP_PEMOHON_2,
      -- I.NAMA_OB AS NAMA_WARIS,I.ID_OB AS ID_OB,      
      /* CASE 
         WHEN LENGTH (DDD.NO_KP4) IS NULL THEN ''
         WHEN LENGTH(DDD.NO_KP4)<12 THEN  ''||RTRIM(DDD.NO_KP4)||''
         WHEN LENGTH(RTRIM(DDD.NO_KP4))=12 THEN SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4) 
       ELSE SUBSTR(DDD.NO_KP4,1,6) || '-' || SUBSTR(DDD.NO_KP4,7,2) || '-' || SUBSTR(DDD.NO_KP4,9,4)  ||' ('||SUBSTR(DDD.NO_KP4,12,LENGTH(DDD.NO_KP4))||')'
       END  AS KP_WARIS,
       CASE 
         WHEN LENGTH (DDD2.NO_KP422) IS NULL THEN ''
         WHEN LENGTH(DDD2.NO_KP422)<12 THEN  ''||RTRIM(DDD2.NO_KP422)||''
         WHEN LENGTH(RTRIM(DDD2.NO_KP422))=12 THEN '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4) ||')'
       ELSE '('||SUBSTR(DDD2.NO_KP422,1,6) || '-' || SUBSTR(DDD2.NO_KP422,7,2) || '-' || SUBSTR(DDD2.NO_KP422,9,4)  ||' / '||SUBSTR(DDD2.NO_KP422,12,LENGTH(DDD2.NO_KP422))||')'
       END  AS KP_WARIS_2,*/
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT1_SURAT),'&','&#38;')),',') AS ALAMAT1_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT2_SURAT),'&','&#38;')),',') AS ALAMAT2_PM,
       REPLACE(UPPER(REPLACE(TRIM(C.ALAMAT3_SURAT),'&','&#38;')),',') AS ALAMAT3_PM,
       REPLACE(UPPER(TRIM(C.POSKOD_SURAT)),',') AS POSKOD_PM,
       CASE
        WHEN UPPER(TRIM(P.KETERANGAN)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(P.KETERANGAN)),'')
        ELSE ''
       END AS BANDAR_PM,
       CASE
        WHEN UPPER(TRIM(F.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(F.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_PM,        
       --FFF.NAMA_PENJAGA AS NAMA_PENJAGA,
       TO_CHAR (L.TARIKH_BICARA, 'dd') AS HARI_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'mm') AS BULAN_TARIKH_BICARA,TO_CHAR (L.TARIKH_BICARA, 'yyyy') AS TAHUN_TARIKH_BICARA,     
       REPLACE(UPPER(REPLACE(TRIM(L.TEMPAT_BICARA),'&','&#38;')),',') AS TEMPAT_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA1),'&','&#38;')),',') AS ALAMAT1_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA2),'&','&#38;')),',') AS ALAMAT2_BC,
       REPLACE(UPPER(REPLACE(TRIM(L.ALAMAT_BICARA3),'&','&#38;')),',') AS ALAMAT3_BC,
       REPLACE(UPPER(TRIM(L.POSKOD)),',') AS POSKOD_BC,
       CASE
        WHEN UPPER(TRIM(L.BANDAR)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(L.BANDAR)),'')
        ELSE ''
       END AS BANDAR_BC,
       CASE
        WHEN UPPER(TRIM(O.NAMA_NEGERI)) <> 'TIADA MAKLUMAT' THEN NVL(UPPER(TRIM(O.NAMA_NEGERI)),'')
        ELSE ''
       END AS NEGERI_BC,
      
       CASE
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='01' then 'Januari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='02' then 'Februari'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='03' then 'Mac'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='04' then 'April'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='05' then 'Mei'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='06' then 'Jun'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='07' then 'Julai'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='08' then 'Ogos'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='09' then 'September'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='10' then 'Oktober'
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='11' then 'November'       
        WHEN TO_CHAR(L.TARIKH_BICARA, 'mm')='12' then 'Disember'
      END AS BULAN_MELAYU_BICARA,
      L.ID_UNITPSK,UNT.NAMA_PEGAWAI AS NAMA_PEGAWAI, REPLACE(UNT.JAWATAN,',') AS JAWATAN,
      TO_CHAR(L.TARIKH_NOTIS,'DD/MM/YYYYY') AS TARIKH_NOTIS,
      
      NAMA_OB.LIST_OB AS LIST_OB1,
      NAMA_OB_W_STATUS.LIST_OB_W_STATUS AS LIST_OB_W_STATUS1, 
      NAMA_OB_WO_PA.LIST_OB AS LIST_OB2,
      NAMA_OB_W_STATUS_WO_PA.LIST_OB_W_STATUS AS LIST_OB_W_STATUS2
      
  FROM TBLPPKPERMOHONAN A,
       TBLPPKPERMOHONANSIMATI B,
       TBLPPKPEMOHON C,
       TBLPPKSIMATI D,
       TBLPFDFAIL E,
       TBLRUJNEGERI F,
       TBLRUJDAERAH G,
       TBLRUJPEJABAT H,
       TBLPPKOB I,
       TBLPPKPENJAGA K,
       TBLPPKPERBICARAAN L,
       TBLPPKKEPUTUSANPERMOHONAN M,
       TBLRUJNEGERI N,
       TBLRUJNEGERI O,
       TBLRUJBANDAR P,
       TBLRUJBANDAR Q,
       TBLPPKRUJUNIT UNT,
       TBLPPKPERINTAH R,
       TBLPPKPERINTAHHAOBMST S,
       TBLPPKPERINTAHHAOBDTL T,
       TBLPPKOB U,
       TBLRUJNEGERI V,
       (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP1 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA,
             (SELECT      
       CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
       WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
        WHEN TBLPPKSIMATI.NO_KP_BARU IS NULL AND TBLPPKSIMATI.NO_KP_LAIN IS NULL THEN  TBLPPKSIMATI.NO_KP_LAMA 
         ELSE TBLPPKSIMATI.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS NOT NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKSIMATI.NO_KP_BARU IS  NULL AND TBLPPKSIMATI.NO_KP_LAMA IS NOT NULL THEN  TBLPPKSIMATI.NO_KP_LAIN
      END AS NO_KP12 , ID_SIMATI      
      FROM TBLPPKSIMATI ) AAA2,
      (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP2, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB,
           (SELECT 
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAIN
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NULL AND TBLPPKPEMOHON.NO_KP_LAIN IS NULL THEN  TBLPPKPEMOHON.NO_KP_LAMA 
         ELSE TBLPPKPEMOHON.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS NOT NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKPEMOHON.NO_KP_BARU IS  NULL AND TBLPPKPEMOHON.NO_KP_LAMA IS NOT NULL THEN TBLPPKPEMOHON.NO_KP_LAIN     
      END AS NO_KP22, ID_PEMOHON     
     FROM TBLPPKPEMOHON ) BBB2,
      (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP4, ID_OB     
     FROM TBLPPKOB ) DDD,
     (SELECT 
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN  TBLPPKOB.NO_KP_LAMA
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAMA IS NULL THEN  TBLPPKOB.NO_KP_LAIN
         WHEN TBLPPKOB.NO_KP_BARU IS NULL AND TBLPPKOB.NO_KP_LAIN IS NULL THEN  TBLPPKOB.NO_KP_LAMA 
         ELSE TBLPPKOB.NO_KP_BARU
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS NOT NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAMA
      END || '' ||     
      CASE 
         WHEN TBLPPKOB.NO_KP_BARU IS  NULL AND TBLPPKOB.NO_KP_LAMA IS NOT NULL THEN TBLPPKOB.NO_KP_LAIN     
      END AS NO_KP42, ID_OB     
      FROM TBLPPKOB ) DDD2,
      (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB,EEE.ID_PA4
            
        FROM TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
             
            
             S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4
          )EEE
          WHERE U.ID_OB = EEE.ID_PA4
          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB,
          (SELECT 
          EEE.ID_PA4,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,EEE.NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4,T.STATUS_OB
          )EEE
          WHERE U.ID_OB = EEE.ID_PA4
          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB_W_STATUS,
          
          (SELECT 
         SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB)).EXTRACT ('//text()'), ','),3) AS LIST_OB--,EEE.ID_PA4
            
        FROM --TBLPPKOB U,   
           (SELECT TO_CHAR(
             CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
              ) AS NAMA_OB,
             
            
             S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA4
--          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB_WO_PA,
          (SELECT 
         -- EEE.ID_PA4,
          SUBSTR(RTRIM (XMLAGG (XMLELEMENT (E,NAMA_OB_W_STATUS)).EXTRACT ('//text()'), ','),3) AS LIST_OB_W_STATUS
            
        FROM --TBLPPKOB U,   
           (SELECT 
              TO_CHAR( CASE 
             WHEN  
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 
             ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB)) 
             AND
             (COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) <> 1)
             THEN
             ' dan '
             WHEN  COUNT(*) OVER 
             ( PARTITION BY S.ID_PA4 ) = 1 THEN ', '
             ELSE
             ', '
             END || UPPER(T.NAMA_OB) || ' (' 
             || CASE 
                    WHEN T.NO_KP_BARU IS NULL THEN UPPER(T.NO_SURAT_BERANAK) 
                    WHEN T.NO_KP_BARU IS NOT NULL AND T.NO_SURAT_BERANAK IS NULL THEN SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) 
                    ELSE SUBSTR(T.NO_KP_BARU,1,6) || '-' || SUBSTR(T.NO_KP_BARU,7,2) || '-' || SUBSTR(T.NO_KP_BARU,9,4) ||'/'|| UPPER(T.NO_SURAT_BERANAK) 
                END || ') ' 
             || CASE 
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 2 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY S.ID_PA4 ORDER BY T.STATUS_OB) = COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) AND T.STATUS_OB = 4 AND COUNT(*) OVER 
                        ( PARTITION BY S.ID_PA4 ) <> 1 AND 
                        COUNT(*) OVER ( PARTITION BY S.ID_PA4 ) = 
                        ROW_NUMBER () OVER ( PARTITION BY S.ID_PA4 ORDER BY S.ID_OB) THEN 'adalah tidak sempurna akal'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 2 
                         THEN 'adalah seorang yang belum dewasa'
                    WHEN COUNT(*) OVER (PARTITION BY T.STATUS_OB ORDER BY S.ID_PA4) = 1 AND T.STATUS_OB = 4 
                         THEN 'adalah seorang yang tidak sempurna akal'
                    
                    
                END
                ) AS NAMA_OB_W_STATUS,
         
            
             S.ID_PA4,S.ID_OB

           FROM
             TBLPFDFAIL M, TBLPPKPERMOHONAN N, TBLPPKKEPUTUSANPERMOHONAN O, TBLPPKPERBICARAAN P, TBLPPKPERINTAH Q, TBLPPKPERINTAHHAOBMST R, TBLPPKPERINTAHHAOBDTL S, TBLPPKOB T
             

             
          WHERE
          M.ID_FAIL = N.ID_FAIL
          AND N.ID_PERMOHONAN = O.ID_PERMOHONAN 
          AND O.ID_KEPUTUSANPERMOHONAN = P.ID_KEPUTUSANPERMOHONAN
          AND P.ID_PERBICARAAN = Q.ID_PERBICARAAN
          --AND P.ID_NEGERI = N.ID_NEGERIMHN
          AND Q.FLAG_JENIS_KEPUTUSAN = 0
          AND Q.ID_PERINTAH = R.ID_PERINTAH
          AND R.ID_PERINTAHHAOBMST = S.ID_PERINTAHHAOBMST
          AND S.ID_OB = T.ID_OB
          AND T.STATUS_OB IN (2,4)
          AND S.ID_PA4 IS NOT NULL
          AND M.ID_FAIL = $P!{idfail} 
          GROUP BY S.ID_OB,S.ID_PA4,T.NAMA_OB,T.NO_KP_BARU,T.NO_SURAT_BERANAK, S.ID_PA4,T.STATUS_OB
          )
--          EEE
--          WHERE U.ID_OB = EEE.ID_PA4
--          GROUP BY EEE.ID_PA4
          
          ) NAMA_OB_W_STATUS_WO_PA
      
      
      
 WHERE
   A.ID_PEMOHON = C.ID_PEMOHON 
   AND A.ID_PERMOHONAN = B.ID_PERMOHONAN
   AND B.ID_SIMATI = D.ID_SIMATI
  -- AND I.ID_OB = FFF.ID_OBMINOR
   AND I.ID_SIMATI = D.ID_SIMATI
   AND A.ID_PERMOHONAN = M.ID_PERMOHONAN
   AND M.ID_KEPUTUSANPERMOHONAN = L.ID_KEPUTUSANPERMOHONAN
   AND A.ID_FAIL = E.ID_FAIL
   AND A.ID_NEGERIMHN = F.ID_NEGERI(+)
   AND A.ID_DAERAHMHN = G.ID_DAERAH(+)
   AND K.ID_NEGERI = N.ID_NEGERI(+)
   AND L.ID_NEGERIBICARA = O.ID_NEGERI(+)
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = L.ID_KEPUTUSANPERMOHONAN
  -- AND Z.ID_KEPUTUSANPERMOHONAN  = M.ID_KEPUTUSANPERMOHONAN
  -- AND Z.TARIKH_BICARA = L.TARIKH_BICARA(+)
   AND D.ID_SIMATI = AAA.ID_SIMATI
   AND D.ID_SIMATI = AAA2.ID_SIMATI
   AND C.ID_PEMOHON = BBB.ID_PEMOHON
   AND C.ID_PEMOHON = BBB2.ID_PEMOHON
   AND I.ID_OB = DDD.ID_OB
   AND U.ID_OB = DDD2.ID_OB
   AND T.ID_PA4 = U.ID_OB
   AND U.ID_NEGERI = V.ID_NEGERI
   AND C.ID_BANDARSURAT = P.ID_BANDAR(+)
   AND K.ID_BANDAR = Q.ID_BANDAR(+)
   AND I.STATUS_OB IN (2,4)
   AND UNT.ID_UNITPSK = R.ID_UNITPSK
   AND L.ID_PERBICARAAN = R.ID_PERBICARAAN
   AND R.FLAG_JENIS_KEPUTUSAN = 0   
   AND R.ID_PERINTAH = S.ID_PERINTAH 
   AND S.ID_PERINTAHHAOBMST = T.ID_PERINTAHHAOBMST
   AND T.ID_PA4 IS NOT NULL
   AND NAMA_OB.ID_PA4 = T.ID_PA4
   AND NAMA_OB_W_STATUS.ID_PA4 = T.ID_PA4
   AND E.ID_FAIL =$P!{idfail}]]></queryString>

	<field name="ID_PA1" class="java.math.BigDecimal"/>
	<field name="NAMA_PA" class="java.lang.String"/>
	<field name="KP_PA" class="java.lang.String"/>
	<field name="ALAMAT_PA" class="java.lang.String"/>
	<field name="ID_FAIL" class="java.math.BigDecimal"/>
	<field name="NO_KP_BARU" class="java.lang.String"/>
	<field name="NO_FAIL" class="java.lang.String"/>
	<field name="TAHUN" class="java.lang.String"/>
	<field name="NEGERI_MOHON" class="java.lang.String"/>
	<field name="DAERAH_MOHON" class="java.lang.String"/>
	<field name="NAMA_SIMATI" class="java.lang.String"/>
	<field name="NAMA_LAIN" class="java.lang.String"/>
	<field name="TARIKH_MATI" class="java.lang.String"/>
	<field name="NO_SIJIL_MATI" class="java.lang.String"/>
	<field name="KP_SIMATI" class="java.lang.String"/>
	<field name="BUKTI_MATI" class="java.lang.String"/>
	<field name="KP_SIMATI_2" class="java.lang.String"/>
	<field name="NAMA_PEMOHON" class="java.lang.String"/>
	<field name="KP_PEMOHON" class="java.lang.String"/>
	<field name="KP_PEMOHON_2" class="java.lang.String"/>
	<field name="ALAMAT1_PM" class="java.lang.String"/>
	<field name="ALAMAT2_PM" class="java.lang.String"/>
	<field name="ALAMAT3_PM" class="java.lang.String"/>
	<field name="POSKOD_PM" class="java.lang.String"/>
	<field name="BANDAR_PM" class="java.lang.String"/>
	<field name="NEGERI_PM" class="java.lang.String"/>
	<field name="HARI_TARIKH_BICARA" class="java.lang.String"/>
	<field name="BULAN_TARIKH_BICARA" class="java.lang.String"/>
	<field name="TAHUN_TARIKH_BICARA" class="java.lang.String"/>
	<field name="TEMPAT_BC" class="java.lang.String"/>
	<field name="ALAMAT1_BC" class="java.lang.String"/>
	<field name="ALAMAT2_BC" class="java.lang.String"/>
	<field name="ALAMAT3_BC" class="java.lang.String"/>
	<field name="POSKOD_BC" class="java.lang.String"/>
	<field name="BANDAR_BC" class="java.lang.String"/>
	<field name="NEGERI_BC" class="java.lang.String"/>
	<field name="BULAN_MELAYU_BICARA" class="java.lang.String"/>
	<field name="ID_UNITPSK" class="java.math.BigDecimal"/>
	<field name="NAMA_PEGAWAI" class="java.lang.String"/>
	<field name="JAWATAN" class="java.lang.String"/>
	<field name="TARIKH_NOTIS" class="java.lang.String"/>
	<field name="LIST_OB1" class="java.lang.String"/>
	<field name="LIST_OB_W_STATUS1" class="java.lang.String"/>
	<field name="LIST_OB2" class="java.lang.String"/>
	<field name="LIST_OB_W_STATUS2" class="java.lang.String"/>

	<variable name="SUM_ROW" class="java.lang.Integer" resetType="Report" calculation="Sum">
		<variableExpression><![CDATA[$V{REPORT_COUNT}]]></variableExpression>
	</variable>
		<background>
			<band height="0"  isSplitAllowed="true" >
			</band>
		</background>
		<title>
			<band height="0"  isSplitAllowed="false" >
			</band>
		</title>
		<pageHeader>
			<band height="0"  isSplitAllowed="false" >
			</band>
		</pageHeader>
		<columnHeader>
			<band height="0"  isSplitAllowed="true" >
			</band>
		</columnHeader>
		<detail>
			<band height="211"  isSplitAllowed="true" >
				<textField isStretchWithOverflow="true" isBlankWhenNull="false" evaluationTime="Now" hyperlinkType="None"  hyperlinkTarget="Self" >
					<reportElement
						x="42"
						y="2"
						width="450"
						height="11"
						key="textField"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Right">
						<font fontName="Verdana" pdfFontName="Helvetica-Bold" size="9" isBold="true"/>
					</textElement>
				<textFieldExpression   class="java.lang.String"><![CDATA[($F{NO_FAIL}!= null ?$F{NO_FAIL}:"TIADA")]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" isBlankWhenNull="true" evaluationTime="Now" hyperlinkType="None"  hyperlinkTarget="Self" >
					<reportElement
						x="42"
						y="32"
						width="450"
						height="19"
						key="textField-9"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Center" verticalAlignment="Middle" markup="styled" lineSpacing="Single">
						<font fontName="Verdana" pdfFontName="Helvetica" size="9" isBold="false"/>
					</textElement>
				<textFieldExpression   class="java.lang.String"><![CDATA["<style isBold='true' pdfFontName='Helvetica-Bold'>"+"BORANG H"+"</style>"
+"\n(Peraturan 8)"
+"\n<style isBold='true' pdfFontName='Helvetica-Bold'>"+"MALAYSIA"+"</style>"
+"\n\nNegeri <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{NEGERI_MOHON}!= null ? $F{NEGERI_MOHON}:"TIADA")+"</style>"
+"\nDaerah <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{DAERAH_MOHON}!= null ? $F{DAERAH_MOHON}:"TIADA")+"</style>"
+"\n\n<style isBold='true' pdfFontName='Helvetica-Bold'>"+"AKTA HARTA PUSAKA KECIL (PEMBAHAGIAN), 1955"+"</style>"
+"\nGUAMAN PEMBAHAGIAN NO. <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{NO_FAIL}!= null ? $F{NO_FAIL}:"TIADA")+"</style> TAHUN <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{TAHUN}!= null ? $F{TAHUN}:"TIADA")+"</style>"
+"\n"]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" isBlankWhenNull="true" evaluationTime="Now" hyperlinkType="None"  hyperlinkTarget="Self" >
					<reportElement
						x="42"
						y="52"
						width="450"
						height="19"
						key="textField-10"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Justified" markup="styled" lineSpacing="Single">
						<font fontName="Verdana" pdfFontName="Helvetica" size="9" isBold="false"/>
					</textElement>
				<textFieldExpression   class="java.lang.String"><![CDATA["Dalam hal Harta Pusaka <style isBold='true' pdfFontName='Helvetica-Bold'>" + ($F{NAMA_LAIN}!= null ? $F{NAMA_SIMATI}+" @ "+$F{NAMA_LAIN}:$F{NAMA_SIMATI})+($F{KP_SIMATI}!= null ? ", No. KP: "  +$F{KP_SIMATI}:"")  + ($F{TARIKH_MATI}!= null ? ", Tarikh Mati: "+$F{TARIKH_MATI}:"")+($F{BUKTI_MATI}!=null?$F{BUKTI_MATI}:"")+".</style>"
+"\n\nPetisyen daripada <style isBold='true' pdfFontName='Helvetica-Bold'>" + ($F{NAMA_PEMOHON}!= null ? $F{NAMA_PEMOHON}:"TIADA") + ($F{NO_KP_BARU}!= null ? ", No. KP: "+$F{KP_PEMOHON}:"")+"</style> yang beralamat di <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{ALAMAT1_PM}!=null ? $F{ALAMAT1_PM}:"")+($F{ALAMAT2_PM}!=null ? ", "+$F{ALAMAT2_PM}:"")+($F{ALAMAT3_PM}!=null ? ", "+$F{ALAMAT3_PM}:"")+($F{POSKOD_PM}!=null ? ", "+$F{POSKOD_PM}:"")+($F{BANDAR_PM}!=null ? " "+$F{BANDAR_PM}:"")+(($F{NEGERI_PM}!=null) && ($F{BANDAR_PM}==null) ? " "+$F{NEGERI_PM}:(($F{NEGERI_PM}!=null) && ($F{BANDAR_PM}!=null) ? ", "+$F{NEGERI_PM}:"TIADA"))+"</style>."
+"\n\n                                                     <style isBold='true' pdfFontName='Helvetica-Bold'>PELANTIKAN PENJAGA</style>"
+"\n                                                            (Seksyen 10)"
+"\n\n       BAHAWASANYA adalah didapati bahawa <style isBold='true' pdfFontName='Helvetica-Bold'>"+($V{SUM_ROW}.intValue()==1?$F{LIST_OB2}: $F{LIST_OB1})+"</style> adalah seorang benefisiari/benefisiari-benefisiari kepada atau penuntut atas sesuatu kepentingan dalam harta pusaka <style isBold='true' pdfFontName='Helvetica-Bold'>" +($F{NAMA_SIMATI}!= null ? $F{NAMA_SIMATI}:"TIADA")+" "+($F{KP_SIMATI_2}!= null ? $F{KP_SIMATI_2}:"TIADA")+"</style> si mati dan bahawa <style isBold='true' pdfFontName='Helvetica-Bold'>"+($V{SUM_ROW}.intValue()==1?$F{LIST_OB_W_STATUS2}: $F{LIST_OB_W_STATUS1})+".</style>"
+"\n\n       MAKA OLEH YANG DEMIKIAN SAYA <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{NAMA_PEGAWAI}!= null ? $F{NAMA_PEGAWAI}:"TIADA")+ " * " +"PENOLONG PENTADBIR TANAH"+"</style>  bagi Daerah <style isBold='true' pdfFontName='Helvetica-Bold'>" +($F{DAERAH_MOHON}!= null ? $F{DAERAH_MOHON}:"TIADA")+ "</style> DENGAN INI MELANTIK <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{NAMA_PA}!= null ? $F{NAMA_PA}:"TIADA")+($F{KP_PA} != null ?" ("+ $F{KP_PA}+") ":" ")+"yang beralamat di "+$F{ALAMAT_PA}+"</style> MENJADI PENJAGA kepada <style isBold='true' pdfFontName='Helvetica-Bold'>"+($V{SUM_ROW}.intValue()==1?$F{LIST_OB2}:$F{LIST_OB1})+"</style> bagi maksud semua prosiding dalam guaman yang tersebut di atas."
+"\n\n"+"Di buat di <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{TEMPAT_BC}!= null ? $F{TEMPAT_BC}+", ":"")+($F{ALAMAT1_BC}!=null ? $F{ALAMAT1_BC}:"")+($F{ALAMAT2_BC}!=null ? ", "+$F{ALAMAT2_BC}:"")+($F{ALAMAT3_BC}!=null ? ", "+$F{ALAMAT3_BC}:"")+($F{POSKOD_BC}!=null ? ", "+$F{POSKOD_BC}:"")+($F{BANDAR_BC}!=null ? " "+$F{BANDAR_BC}:"")+(($F{NEGERI_BC}!=null) && ($F{BANDAR_BC}==null) ? " "+$F{NEGERI_BC}:(($F{NEGERI_BC}!=null) && ($F{BANDAR_BC}!=null) ? ", "+$F{NEGERI_BC}:"TIADA"))+"</style>"+" pada <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{HARI_TARIKH_BICARA}!= null ? $F{HARI_TARIKH_BICARA}:"TIADA")+"</style> hari bulan <style isBold='true' pdfFontName='Helvetica-Bold'>"+($F{BULAN_MELAYU_BICARA}!= null ? $F{BULAN_MELAYU_BICARA}:"TIADA")+" "+($F{TAHUN_TARIKH_BICARA}!= null ? $F{TAHUN_TARIKH_BICARA}:"")+".</style>"]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement
						x="250"
						y="113"
						width="283"
						height="11"
						key="staticText-20"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Left" verticalAlignment="Middle">
						<font fontName="Verdana" pdfFontName="Helvetica" size="9" isBold="false"/>
					</textElement>
				<text><![CDATA[T.M																												....................................................]]></text>
				</staticText>
				<staticText>
					<reportElement
						x="338"
						y="124"
						width="194"
						height="11"
						key="staticText-21"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Left" verticalAlignment="Middle">
						<font fontName="Verdana" pdfFontName="Helvetica" size="9" isBold="false" isItalic="false" isUnderline="false"/>
					</textElement>
				<text><![CDATA[PENTADBIR TANAH DAERAH/]]></text>
				</staticText>
				<staticText>
					<reportElement
						x="338"
						y="134"
						width="194"
						height="11"
						key="staticText-22"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Left" verticalAlignment="Middle">
						<font fontName="Verdana" pdfFontName="Helvetica" size="9" isBold="false" isItalic="false" isUnderline="false"/>
					</textElement>
				<text><![CDATA[PEMUNGUT/PEGAWAI DAERAH/]]></text>
				</staticText>
				<staticText>
					<reportElement
						x="338"
						y="144"
						width="194"
						height="11"
						key="staticText-23"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Left" verticalAlignment="Middle">
						<font fontName="Verdana" pdfFontName="Helvetica" size="9" isBold="false" isItalic="false" isUnderline="false"/>
					</textElement>
				<text><![CDATA[PEGAWAI TADBIR SARAWAK]]></text>
				</staticText>
				<line direction="TopDown">
					<reportElement
						x="42"
						y="193"
						width="450"
						height="0"
						key="line-1"
						positionType="Float"/>
					<graphicElement stretchType="NoStretch"/>
				</line>
				<textField isStretchWithOverflow="true" isBlankWhenNull="false" evaluationTime="Now" hyperlinkType="None"  hyperlinkTarget="Self" >
					<reportElement
						x="42"
						y="194"
						width="450"
						height="11"
						key="textField-11"
						positionType="Float"/>
					<box></box>
					<textElement textAlignment="Justified" verticalAlignment="Middle">
						<font fontName="Verdana" size="9"/>
					</textElement>
				<textFieldExpression   class="java.lang.String"><![CDATA["* Masukkan Pentadbir Tanah Daerah/Pemungut/Pegawai Daerah/Pegawai Tadbir Sarawak mengikut kehendak keadaan."]]></textFieldExpression>
				</textField>
				<break>
					<reportElement
						mode="Opaque"
						x="0"
						y="210"
						width="535"
						height="0"
						key="element-1"/>
				</break>
			</band>
		</detail>
		<columnFooter>
			<band height="0"  isSplitAllowed="true" >
			</band>
		</columnFooter>
		<pageFooter>
			<band height="0"  isSplitAllowed="true" >
			</band>
		</pageFooter>
		<summary>
			<band height="0"  isSplitAllowed="true" >
			</band>
		</summary>
		<noData>
			<band height="42"  isSplitAllowed="true" >
				<staticText>
					<reportElement
						x="42"
						y="2"
						width="450"
						height="20"
						key="staticText-24"/>
					<box></box>
					<textElement textAlignment="Center">
						<font fontName="Verdana" pdfFontName="Helvetica-BoldOblique" isBold="true" isItalic="true"/>
					</textElement>
				<text><![CDATA[TIADA REKOD BAGI BORANG INI.]]></text>
				</staticText>
				<staticText>
					<reportElement
						x="42"
						y="22"
						width="450"
						height="20"
						key="staticText-25"/>
					<box></box>
					<textElement textAlignment="Center">
						<font fontName="Verdana" pdfFontName="Helvetica-BoldOblique" isBold="true" isItalic="true"/>
					</textElement>
				<text><![CDATA[BORANG TIDAK DAPAT DIJANA.]]></text>
				</staticText>
			</band>
		</noData>
</jasperReport>
